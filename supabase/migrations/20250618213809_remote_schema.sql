

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "postgis" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."ad_images" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp with time zone,
    "ad_id" bigint NOT NULL,
    "url" "text" NOT NULL,
    "id_defualt" boolean DEFAULT false NOT NULL
);


ALTER TABLE "public"."ad_images" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."pricings" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp with time zone,
    "scheme" "text" NOT NULL,
    "currency" "text" NOT NULL,
    "details" "jsonb" NOT NULL,
    "ad_id" bigint NOT NULL
);


ALTER TABLE "public"."pricings" OWNER TO "postgres";


CREATE OR REPLACE FUNCTION "public"."fetch_nearby_ads"("lat" double precision, "lon" double precision) RETURNS TABLE("id" bigint, "title" "text", "description" "text", "category_id" "text", "sub_category_id" "text", "store_id" bigint, "is_new" boolean, "is_featured" boolean, "latitude" double precision, "longitude" double precision, "seller_id" "uuid", "price" "public"."pricings", "image" "public"."ad_images", "distance" double precision)
    LANGUAGE "plpgsql"
    SET "search_path" TO ''
    AS $$
BEGIN
    RETURN QUERY
    SELECT 
        a.id, 
        a.title, 
        a.description, 
        a.category_id, 
        a.sub_category_id, 
        a.store_id, a.is_new, 
        a.is_featured, 
        extensions.st_y(a.location) as latitude, 
        extensions.st_x(a.location) as longitude, 
        a.seller_id, 
        a.pricing, 
        a.image,
        extensions.st_distance(a.location, extensions.st_makepoint(lon, lat)) as distance
    FROM public.ads_list_view a;
    -- ORDER BY distance;
END;
$$;


ALTER FUNCTION "public"."fetch_nearby_ads"("lat" double precision, "lon" double precision) OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."ad_likes" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp with time zone,
    "ad_id" bigint NOT NULL,
    "user_id" "uuid" NOT NULL,
    "status" boolean DEFAULT true NOT NULL
);


ALTER TABLE "public"."ad_likes" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."ad_ratings" (
    "id" bigint NOT NULL,
    "ad_id" bigint NOT NULL,
    "user_id" "uuid" NOT NULL,
    "score" integer,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "deleted_at" timestamp with time zone,
    CONSTRAINT "ad_ratings_score_check" CHECK ((("score" >= 1) AND ("score" <= 5)))
);


ALTER TABLE "public"."ad_ratings" OWNER TO "postgres";


ALTER TABLE "public"."ad_ratings" ALTER COLUMN "id" ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME "public"."ad_ratings_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."ad_review_replies" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp with time zone,
    "user_id" "uuid" NOT NULL,
    "review_id" bigint NOT NULL,
    "message" "text" NOT NULL
);


ALTER TABLE "public"."ad_review_replies" OWNER TO "postgres";


ALTER TABLE "public"."ad_review_replies" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."ad_review_replies_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."ad_reviews" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp with time zone,
    "ad_id" bigint NOT NULL,
    "user_id" "uuid" NOT NULL,
    "message" "text" NOT NULL
);


ALTER TABLE "public"."ad_reviews" OWNER TO "postgres";


ALTER TABLE "public"."ad_reviews" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."ad_reviews_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."ad_views" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp with time zone,
    "ad_id" bigint NOT NULL,
    "user_id" "uuid" NOT NULL
);


ALTER TABLE "public"."ad_views" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."ads" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp with time zone,
    "title" "text" NOT NULL,
    "description" "text",
    "store_id" bigint,
    "is_new" boolean,
    "is_featured" boolean,
    "location" "extensions"."geometry" NOT NULL,
    "seller_id" "uuid" DEFAULT "auth"."uid"(),
    "specs" "jsonb",
    "category_id" "text",
    "sub_category_id" "text"
);


ALTER TABLE "public"."ads" OWNER TO "postgres";


ALTER TABLE "public"."ads" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."ads_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."ad_images" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."ads_images_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE OR REPLACE VIEW "public"."ads_list_view" WITH ("security_invoker"='on') AS
 SELECT "a"."id",
    "a"."created_at",
    "a"."deleted_at",
    "a"."title",
    "a"."description",
    "a"."store_id",
    "a"."is_new",
    "a"."is_featured",
    "a"."location",
    "a"."seller_id",
    "a"."specs",
    "a"."category_id",
    "a"."sub_category_id",
    "pricing".*::"public"."pricings" AS "pricing",
    "image".*::"public"."ad_images" AS "image"
   FROM (("public"."ads" "a"
     LEFT JOIN "public"."pricings" "pricing" ON (("a"."id" = "pricing"."ad_id")))
     LEFT JOIN "public"."ad_images" "image" ON (("a"."id" = "image"."ad_id")));


ALTER TABLE "public"."ads_list_view" OWNER TO "postgres";


CREATE OR REPLACE VIEW "public"."ads_with_pricing_and_images" WITH ("security_invoker"='on') AS
 SELECT "a"."id",
    "a"."created_at",
    "a"."deleted_at",
    "a"."title",
    "a"."description",
    "a"."store_id",
    "a"."is_new",
    "a"."is_featured",
    "a"."location",
    "a"."seller_id",
    "a"."specs",
    "a"."category_id",
    "a"."sub_category_id",
    "pricing".*::"public"."pricings" AS "pricing",
    "image".*::"public"."ad_images" AS "image"
   FROM (("public"."ads" "a"
     LEFT JOIN "public"."pricings" "pricing" ON (("a"."id" = "pricing"."ad_id")))
     LEFT JOIN "public"."ad_images" "image" ON (("a"."id" = "image"."ad_id")));


ALTER TABLE "public"."ads_with_pricing_and_images" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."categories" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" NOT NULL,
    "slug" "text" NOT NULL,
    "default_specs" "text"
);


ALTER TABLE "public"."categories" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."chat_messages" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp with time zone,
    "message" "text" NOT NULL,
    "sender_id" "uuid" NOT NULL,
    "thread_id" bigint
);


ALTER TABLE "public"."chat_messages" OWNER TO "postgres";


ALTER TABLE "public"."chat_messages" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."chat_messages_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."chat_threads" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp with time zone,
    "ad_id" bigint,
    "buyer_id" "uuid"
);


ALTER TABLE "public"."chat_threads" OWNER TO "postgres";


ALTER TABLE "public"."chat_threads" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."chat_threads_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."flash_sales" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp with time zone,
    "started_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "duration" bigint NOT NULL,
    "ad_id" bigint NOT NULL,
    "flash_price" double precision NOT NULL,
    "info" "text"
);


ALTER TABLE "public"."flash_sales" OWNER TO "postgres";


ALTER TABLE "public"."flash_sales" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."flash_sales_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."pricings" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."pricings_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."store_likes" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp with time zone,
    "store_id" bigint NOT NULL,
    "user_id" "uuid" NOT NULL,
    "status" boolean DEFAULT true NOT NULL
);


ALTER TABLE "public"."store_likes" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."store_ratings" (
    "id" bigint NOT NULL,
    "store_id" bigint NOT NULL,
    "user_id" "uuid" NOT NULL,
    "score" integer,
    "created_at" timestamp with time zone DEFAULT "now"(),
    CONSTRAINT "store_ratings_score_check" CHECK ((("score" >= 1) AND ("score" <= 5)))
);


ALTER TABLE "public"."store_ratings" OWNER TO "postgres";


ALTER TABLE "public"."store_ratings" ALTER COLUMN "id" ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME "public"."store_ratings_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."store_reviews" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp with time zone,
    "store_id" bigint NOT NULL,
    "user_id" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "message" "text" NOT NULL
);


ALTER TABLE "public"."store_reviews" OWNER TO "postgres";


ALTER TABLE "public"."store_reviews" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."store_reviews_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."store_views" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp with time zone,
    "user_id" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "store_id" bigint NOT NULL
);


ALTER TABLE "public"."store_views" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."stores" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp with time zone,
    "name" "text" NOT NULL,
    "logo" "text",
    "description" "text",
    "status" "text",
    "keeper_id" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "welcome_note" "text"
);


ALTER TABLE "public"."stores" OWNER TO "postgres";


ALTER TABLE "public"."stores" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."stores_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."sub_categories" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" NOT NULL,
    "slug" "text" NOT NULL,
    "default_specs" "text",
    "category_id" "text"
);


ALTER TABLE "public"."sub_categories" OWNER TO "postgres";


ALTER TABLE ONLY "public"."ad_likes"
    ADD CONSTRAINT "ad_likes_pkey" PRIMARY KEY ("ad_id", "user_id");



ALTER TABLE ONLY "public"."ad_ratings"
    ADD CONSTRAINT "ad_ratings_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."ad_review_replies"
    ADD CONSTRAINT "ad_review_reply_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."ad_reviews"
    ADD CONSTRAINT "ad_reviews_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."ad_views"
    ADD CONSTRAINT "ad_views_pkey" PRIMARY KEY ("ad_id", "user_id");



ALTER TABLE ONLY "public"."ad_images"
    ADD CONSTRAINT "ads_images_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."ads"
    ADD CONSTRAINT "ads_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."categories"
    ADD CONSTRAINT "categories_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."categories"
    ADD CONSTRAINT "categories_pkey" PRIMARY KEY ("slug");



ALTER TABLE ONLY "public"."categories"
    ADD CONSTRAINT "categories_slug_key" UNIQUE ("slug");



ALTER TABLE ONLY "public"."chat_messages"
    ADD CONSTRAINT "chat_messages_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."chat_threads"
    ADD CONSTRAINT "chat_threads_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."flash_sales"
    ADD CONSTRAINT "flash_sales_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."pricings"
    ADD CONSTRAINT "pricings_ad_id_key" UNIQUE ("ad_id");



ALTER TABLE ONLY "public"."pricings"
    ADD CONSTRAINT "pricings_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."store_likes"
    ADD CONSTRAINT "store_likes_pkey" PRIMARY KEY ("store_id", "user_id");



ALTER TABLE ONLY "public"."store_ratings"
    ADD CONSTRAINT "store_ratings_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."store_reviews"
    ADD CONSTRAINT "store_reviews_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."store_views"
    ADD CONSTRAINT "store_views_pkey" PRIMARY KEY ("user_id", "store_id");



ALTER TABLE ONLY "public"."stores"
    ADD CONSTRAINT "stores_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."sub_categories"
    ADD CONSTRAINT "sub_categories_pkey" PRIMARY KEY ("slug");



ALTER TABLE ONLY "public"."sub_categories"
    ADD CONSTRAINT "sub_categories_slug_key" UNIQUE ("slug");



ALTER TABLE ONLY "public"."ad_likes"
    ADD CONSTRAINT "ad_likes_ad_id_fkey" FOREIGN KEY ("ad_id") REFERENCES "public"."ads"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."ad_likes"
    ADD CONSTRAINT "ad_likes_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "public"."ad_ratings"
    ADD CONSTRAINT "ad_ratings_ad_id_fkey" FOREIGN KEY ("ad_id") REFERENCES "public"."ads"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."ad_ratings"
    ADD CONSTRAINT "ad_ratings_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."ad_review_replies"
    ADD CONSTRAINT "ad_review_reply_review_id_fkey" FOREIGN KEY ("review_id") REFERENCES "public"."ad_reviews"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."ad_review_replies"
    ADD CONSTRAINT "ad_review_reply_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "public"."ad_reviews"
    ADD CONSTRAINT "ad_reviews_ad_id_fkey" FOREIGN KEY ("ad_id") REFERENCES "public"."ads"("id");



ALTER TABLE ONLY "public"."ad_reviews"
    ADD CONSTRAINT "ad_reviews_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "public"."ad_views"
    ADD CONSTRAINT "ad_views_ad_id_fkey" FOREIGN KEY ("ad_id") REFERENCES "public"."ads"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."ad_views"
    ADD CONSTRAINT "ad_views_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."ads"
    ADD CONSTRAINT "ads_category_id_fkey" FOREIGN KEY ("category_id") REFERENCES "public"."categories"("slug");



ALTER TABLE ONLY "public"."ad_images"
    ADD CONSTRAINT "ads_images_ad_id_fkey" FOREIGN KEY ("ad_id") REFERENCES "public"."ads"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."ads"
    ADD CONSTRAINT "ads_seller_id_fkey" FOREIGN KEY ("seller_id") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "public"."ads"
    ADD CONSTRAINT "ads_store_id_fkey" FOREIGN KEY ("store_id") REFERENCES "public"."stores"("id");



ALTER TABLE ONLY "public"."ads"
    ADD CONSTRAINT "ads_sub_category_id_fkey" FOREIGN KEY ("sub_category_id") REFERENCES "public"."sub_categories"("slug");



ALTER TABLE ONLY "public"."chat_messages"
    ADD CONSTRAINT "chat_messages_sender_id_fkey" FOREIGN KEY ("sender_id") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "public"."chat_messages"
    ADD CONSTRAINT "chat_messages_thread_id_fkey" FOREIGN KEY ("thread_id") REFERENCES "public"."chat_threads"("id");



ALTER TABLE ONLY "public"."chat_threads"
    ADD CONSTRAINT "chat_threads_ad_id_fkey" FOREIGN KEY ("ad_id") REFERENCES "public"."ads"("id");



ALTER TABLE ONLY "public"."chat_threads"
    ADD CONSTRAINT "chat_threads_buyer_id_fkey" FOREIGN KEY ("buyer_id") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "public"."flash_sales"
    ADD CONSTRAINT "flash_sales_ad_id_fkey" FOREIGN KEY ("ad_id") REFERENCES "public"."ads"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."pricings"
    ADD CONSTRAINT "pricings_ad_id_fkey" FOREIGN KEY ("ad_id") REFERENCES "public"."ads"("id") ON UPDATE CASCADE ON DELETE CASCADE;



ALTER TABLE ONLY "public"."store_likes"
    ADD CONSTRAINT "store_likes_store_id_fkey" FOREIGN KEY ("store_id") REFERENCES "public"."stores"("id");



ALTER TABLE ONLY "public"."store_likes"
    ADD CONSTRAINT "store_likes_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "public"."store_ratings"
    ADD CONSTRAINT "store_ratings_store_id_fkey" FOREIGN KEY ("store_id") REFERENCES "public"."stores"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."store_ratings"
    ADD CONSTRAINT "store_ratings_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id") ON DELETE CASCADE;



ALTER TABLE ONLY "public"."store_reviews"
    ADD CONSTRAINT "store_reviews_store_id_fkey" FOREIGN KEY ("store_id") REFERENCES "public"."stores"("id");



ALTER TABLE ONLY "public"."store_reviews"
    ADD CONSTRAINT "store_reviews_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "public"."store_views"
    ADD CONSTRAINT "store_views_store_id_fkey" FOREIGN KEY ("store_id") REFERENCES "public"."stores"("id");



ALTER TABLE ONLY "public"."store_views"
    ADD CONSTRAINT "store_views_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "public"."stores"
    ADD CONSTRAINT "stores_keeper_id_fkey" FOREIGN KEY ("keeper_id") REFERENCES "auth"."users"("id");



ALTER TABLE ONLY "public"."sub_categories"
    ADD CONSTRAINT "sub_categories_category_id_fkey" FOREIGN KEY ("category_id") REFERENCES "public"."categories"("slug");



CREATE POLICY "Authenticated users can create stores" ON "public"."stores" FOR INSERT TO "authenticated" WITH CHECK ((( SELECT "auth"."uid"() AS "uid") = "keeper_id"));



CREATE POLICY "Enable insert for authenticated users only" ON "public"."ad_images" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable insert for authenticated users only" ON "public"."ads" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "Enable insert for authenticated users only" ON "public"."pricings" FOR INSERT TO "authenticated" WITH CHECK (true);



ALTER TABLE "public"."ad_images" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."ad_likes" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."ad_ratings" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."ad_review_replies" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."ad_reviews" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."ad_views" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."ads" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "allow_read_all_ad_images" ON "public"."ad_images" FOR SELECT USING (true);



CREATE POLICY "allow_read_all_ad_likes" ON "public"."ad_likes" FOR SELECT USING (true);



CREATE POLICY "allow_read_all_ad_ratings" ON "public"."ad_ratings" FOR SELECT USING (true);



CREATE POLICY "allow_read_all_ad_review_replies" ON "public"."ad_review_replies" FOR SELECT USING (true);



CREATE POLICY "allow_read_all_ad_reviews" ON "public"."ad_reviews" FOR SELECT USING (true);



CREATE POLICY "allow_read_all_ad_views" ON "public"."ad_views" FOR SELECT USING (true);



CREATE POLICY "allow_read_all_ads" ON "public"."ads" FOR SELECT USING (true);



CREATE POLICY "allow_read_all_categories" ON "public"."categories" FOR SELECT USING (true);



CREATE POLICY "allow_read_all_chat_messages" ON "public"."chat_messages" FOR SELECT USING (true);



CREATE POLICY "allow_read_all_chat_threads" ON "public"."chat_threads" FOR SELECT USING (true);



CREATE POLICY "allow_read_all_flash_sales" ON "public"."flash_sales" FOR SELECT USING (true);



CREATE POLICY "allow_read_all_pricings" ON "public"."pricings" FOR SELECT USING (true);



CREATE POLICY "allow_read_all_store_likes" ON "public"."store_likes" FOR SELECT USING (true);



CREATE POLICY "allow_read_all_store_ratings" ON "public"."store_ratings" FOR SELECT USING (true);



CREATE POLICY "allow_read_all_store_reviews" ON "public"."store_reviews" FOR SELECT USING (true);



CREATE POLICY "allow_read_all_store_views" ON "public"."store_views" FOR SELECT USING (true);



CREATE POLICY "allow_read_all_stores" ON "public"."stores" FOR SELECT USING (true);



CREATE POLICY "allow_read_all_sub_categories" ON "public"."sub_categories" FOR SELECT USING (true);



ALTER TABLE "public"."categories" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."chat_messages" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."chat_threads" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."flash_sales" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."pricings" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."store_likes" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."store_ratings" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."store_reviews" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."store_views" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."stores" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."sub_categories" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";




































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































GRANT ALL ON TABLE "public"."ad_images" TO "anon";
GRANT ALL ON TABLE "public"."ad_images" TO "authenticated";
GRANT ALL ON TABLE "public"."ad_images" TO "service_role";



GRANT ALL ON TABLE "public"."pricings" TO "anon";
GRANT ALL ON TABLE "public"."pricings" TO "authenticated";
GRANT ALL ON TABLE "public"."pricings" TO "service_role";



GRANT ALL ON FUNCTION "public"."fetch_nearby_ads"("lat" double precision, "lon" double precision) TO "anon";
GRANT ALL ON FUNCTION "public"."fetch_nearby_ads"("lat" double precision, "lon" double precision) TO "authenticated";
GRANT ALL ON FUNCTION "public"."fetch_nearby_ads"("lat" double precision, "lon" double precision) TO "service_role";

















































































GRANT ALL ON TABLE "public"."ad_likes" TO "anon";
GRANT ALL ON TABLE "public"."ad_likes" TO "authenticated";
GRANT ALL ON TABLE "public"."ad_likes" TO "service_role";



GRANT ALL ON TABLE "public"."ad_ratings" TO "anon";
GRANT ALL ON TABLE "public"."ad_ratings" TO "authenticated";
GRANT ALL ON TABLE "public"."ad_ratings" TO "service_role";



GRANT ALL ON SEQUENCE "public"."ad_ratings_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."ad_ratings_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."ad_ratings_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."ad_review_replies" TO "anon";
GRANT ALL ON TABLE "public"."ad_review_replies" TO "authenticated";
GRANT ALL ON TABLE "public"."ad_review_replies" TO "service_role";



GRANT ALL ON SEQUENCE "public"."ad_review_replies_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."ad_review_replies_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."ad_review_replies_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."ad_reviews" TO "anon";
GRANT ALL ON TABLE "public"."ad_reviews" TO "authenticated";
GRANT ALL ON TABLE "public"."ad_reviews" TO "service_role";



GRANT ALL ON SEQUENCE "public"."ad_reviews_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."ad_reviews_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."ad_reviews_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."ad_views" TO "anon";
GRANT ALL ON TABLE "public"."ad_views" TO "authenticated";
GRANT ALL ON TABLE "public"."ad_views" TO "service_role";



GRANT ALL ON TABLE "public"."ads" TO "anon";
GRANT ALL ON TABLE "public"."ads" TO "authenticated";
GRANT ALL ON TABLE "public"."ads" TO "service_role";



GRANT ALL ON SEQUENCE "public"."ads_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."ads_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."ads_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."ads_images_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."ads_images_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."ads_images_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."ads_list_view" TO "anon";
GRANT ALL ON TABLE "public"."ads_list_view" TO "authenticated";
GRANT ALL ON TABLE "public"."ads_list_view" TO "service_role";



GRANT ALL ON TABLE "public"."ads_with_pricing_and_images" TO "anon";
GRANT ALL ON TABLE "public"."ads_with_pricing_and_images" TO "authenticated";
GRANT ALL ON TABLE "public"."ads_with_pricing_and_images" TO "service_role";



GRANT ALL ON TABLE "public"."categories" TO "anon";
GRANT ALL ON TABLE "public"."categories" TO "authenticated";
GRANT ALL ON TABLE "public"."categories" TO "service_role";



GRANT ALL ON TABLE "public"."chat_messages" TO "anon";
GRANT ALL ON TABLE "public"."chat_messages" TO "authenticated";
GRANT ALL ON TABLE "public"."chat_messages" TO "service_role";



GRANT ALL ON SEQUENCE "public"."chat_messages_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."chat_messages_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."chat_messages_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."chat_threads" TO "anon";
GRANT ALL ON TABLE "public"."chat_threads" TO "authenticated";
GRANT ALL ON TABLE "public"."chat_threads" TO "service_role";



GRANT ALL ON SEQUENCE "public"."chat_threads_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."chat_threads_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."chat_threads_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."flash_sales" TO "anon";
GRANT ALL ON TABLE "public"."flash_sales" TO "authenticated";
GRANT ALL ON TABLE "public"."flash_sales" TO "service_role";



GRANT ALL ON SEQUENCE "public"."flash_sales_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."flash_sales_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."flash_sales_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."pricings_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."pricings_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."pricings_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."store_likes" TO "anon";
GRANT ALL ON TABLE "public"."store_likes" TO "authenticated";
GRANT ALL ON TABLE "public"."store_likes" TO "service_role";



GRANT ALL ON TABLE "public"."store_ratings" TO "anon";
GRANT ALL ON TABLE "public"."store_ratings" TO "authenticated";
GRANT ALL ON TABLE "public"."store_ratings" TO "service_role";



GRANT ALL ON SEQUENCE "public"."store_ratings_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."store_ratings_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."store_ratings_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."store_reviews" TO "anon";
GRANT ALL ON TABLE "public"."store_reviews" TO "authenticated";
GRANT ALL ON TABLE "public"."store_reviews" TO "service_role";



GRANT ALL ON SEQUENCE "public"."store_reviews_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."store_reviews_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."store_reviews_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."store_views" TO "anon";
GRANT ALL ON TABLE "public"."store_views" TO "authenticated";
GRANT ALL ON TABLE "public"."store_views" TO "service_role";



GRANT ALL ON TABLE "public"."stores" TO "anon";
GRANT ALL ON TABLE "public"."stores" TO "authenticated";
GRANT ALL ON TABLE "public"."stores" TO "service_role";



GRANT ALL ON SEQUENCE "public"."stores_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."stores_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."stores_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."sub_categories" TO "anon";
GRANT ALL ON TABLE "public"."sub_categories" TO "authenticated";
GRANT ALL ON TABLE "public"."sub_categories" TO "service_role";









ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
